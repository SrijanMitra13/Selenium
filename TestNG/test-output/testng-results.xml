<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="3" total="13" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-11-12T00:48:26 IST" name="Loan Department" finished-at="2024-11-12T00:48:27 IST" duration-ms="147">
    <groups>
      <group name="Smoke">
        <method signature="Basics2.ploan()[pri:0, instance:A_Test.Basics2@57d7f8ca]" name="ploan" class="A_Test.Basics2"/>
        <method signature="Basics4.mobileLoginHomeLoan()[pri:0, instance:A_Test.Basics4@76c3e77a]" name="mobileLoginHomeLoan" class="A_Test.Basics4"/>
        <method signature="Basics3.mobileLoginCarLoan()[pri:0, instance:A_Test.Basics3@66f57048]" name="mobileLoginCarLoan" class="A_Test.Basics3"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2024-11-12T00:48:26 IST" name="Car Loan" finished-at="2024-11-12T00:48:27 IST" duration-ms="146">
      <class name="A_Test.Basics3">
        <test-method is-config="true" signature="bfSuite()[pri:0, instance:A_Test.Basics3@66f57048]" started-at="2024-11-12T00:48:26 IST" name="bfSuite" finished-at="2024-11-12T00:48:26 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bfSuite -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:A_Test.Basics3@66f57048]" started-at="2024-11-12T00:48:26 IST" name="beforeClass" finished-at="2024-11-12T00:48:26 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeEvery()[pri:0, instance:A_Test.Basics3@66f57048]" started-at="2024-11-12T00:48:26 IST" name="beforeEvery" finished-at="2024-11-12T00:48:26 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEvery -->
        <test-method signature="mobileLoginCarLoan()[pri:0, instance:A_Test.Basics3@66f57048]" started-at="2024-11-12T00:48:26 IST" name="mobileLoginCarLoan" finished-at="2024-11-12T00:48:26 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileLoginCarLoan -->
        <test-method is-config="true" signature="afterEvery()[pri:0, instance:A_Test.Basics3@66f57048]" started-at="2024-11-12T00:48:26 IST" name="afterEvery" finished-at="2024-11-12T00:48:26 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEvery -->
        <test-method is-config="true" signature="beforeEvery()[pri:0, instance:A_Test.Basics3@66f57048]" started-at="2024-11-12T00:48:26 IST" name="beforeEvery" finished-at="2024-11-12T00:48:26 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEvery -->
        <test-method signature="mobileSignOutCarLoan(java.lang.String,java.lang.String)[pri:0, instance:A_Test.Basics3@66f57048]" started-at="2024-11-12T00:48:26 IST" name="mobileSignOutCarLoan" data-provider="getData" finished-at="2024-11-12T00:48:26 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileSignOutCarLoan -->
        <test-method is-config="true" signature="afterEvery()[pri:0, instance:A_Test.Basics3@66f57048]" started-at="2024-11-12T00:48:26 IST" name="afterEvery" finished-at="2024-11-12T00:48:26 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEvery -->
        <test-method is-config="true" signature="beforeEvery()[pri:0, instance:A_Test.Basics3@66f57048]" started-at="2024-11-12T00:48:26 IST" name="beforeEvery" finished-at="2024-11-12T00:48:26 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEvery -->
        <test-method signature="mobileSignOutCarLoan(java.lang.String,java.lang.String)[pri:0, instance:A_Test.Basics3@66f57048]" started-at="2024-11-12T00:48:26 IST" name="mobileSignOutCarLoan" data-provider="getData" finished-at="2024-11-12T00:48:26 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secondpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileSignOutCarLoan -->
        <test-method is-config="true" signature="afterEvery()[pri:0, instance:A_Test.Basics3@66f57048]" started-at="2024-11-12T00:48:26 IST" name="afterEvery" finished-at="2024-11-12T00:48:26 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEvery -->
        <test-method is-config="true" signature="beforeEvery()[pri:0, instance:A_Test.Basics3@66f57048]" started-at="2024-11-12T00:48:26 IST" name="beforeEvery" finished-at="2024-11-12T00:48:26 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEvery -->
        <test-method signature="mobileSignOutCarLoan(java.lang.String,java.lang.String)[pri:0, instance:A_Test.Basics3@66f57048]" started-at="2024-11-12T00:48:26 IST" name="mobileSignOutCarLoan" data-provider="getData" finished-at="2024-11-12T00:48:26 IST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[thirdpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileSignOutCarLoan -->
        <test-method is-config="true" signature="afterEvery()[pri:0, instance:A_Test.Basics3@66f57048]" started-at="2024-11-12T00:48:27 IST" name="afterEvery" finished-at="2024-11-12T00:48:27 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEvery -->
        <test-method is-config="true" signature="beforeEvery()[pri:0, instance:A_Test.Basics3@66f57048]" started-at="2024-11-12T00:48:27 IST" name="beforeEvery" finished-at="2024-11-12T00:48:27 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEvery -->
        <test-method signature="webLoginCarLoan(java.lang.String,java.lang.String)[pri:0, instance:A_Test.Basics3@66f57048]" started-at="2024-11-12T00:48:27 IST" name="webLoginCarLoan" finished-at="2024-11-12T00:48:27 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[carLoan.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webLoginCarLoan -->
        <test-method is-config="true" signature="afterEvery()[pri:0, instance:A_Test.Basics3@66f57048]" started-at="2024-11-12T00:48:27 IST" name="afterEvery" finished-at="2024-11-12T00:48:27 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEvery -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:A_Test.Basics3@66f57048]" started-at="2024-11-12T00:48:27 IST" name="afterClass" finished-at="2024-11-12T00:48:27 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- A_Test.Basics3 -->
      <class name="A_Test.Basics">
        <test-method is-config="true" signature="afSuite()[pri:0, instance:A_Test.Basics@5403f35f]" started-at="2024-11-12T00:48:27 IST" name="afSuite" finished-at="2024-11-12T00:48:27 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afSuite -->
      </class> <!-- A_Test.Basics -->
    </test> <!-- Car Loan -->
    <test started-at="2024-11-12T00:48:26 IST" name="Personal Loan" finished-at="2024-11-12T00:48:27 IST" duration-ms="147">
      <class name="A_Test.Basics4">
        <test-method signature="LoginAPIHomeLoan()[pri:0, instance:A_Test.Basics4@76c3e77a]" started-at="2024-11-12T00:48:26 IST" name="LoginAPIHomeLoan" finished-at="2024-11-12T00:48:26 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginAPIHomeLoan -->
        <test-method signature="mobileLoginHomeLoan()[pri:0, instance:A_Test.Basics4@76c3e77a]" started-at="2024-11-12T00:48:26 IST" name="mobileLoginHomeLoan" finished-at="2024-11-12T00:48:26 IST" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileLoginHomeLoan -->
        <test-method signature="webLoginHomeLoan(java.lang.String)[pri:0, instance:A_Test.Basics4@76c3e77a]" started-at="2024-11-12T00:48:27 IST" name="webLoginHomeLoan" finished-at="2024-11-12T00:48:27 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[personalLoan.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webLoginHomeLoan -->
      </class> <!-- A_Test.Basics4 -->
      <class name="A_Test.Basics">
        <test-method signature="demo()[pri:0, instance:A_Test.Basics@5403f35f]" started-at="2024-11-12T00:48:26 IST" name="demo" finished-at="2024-11-12T00:48:26 IST" duration-ms="24" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at A_Test.Basics.demo(Basics.java:18)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo -->
        <test-method is-config="true" signature="lastExecution()[pri:0, instance:A_Test.Basics@5403f35f]" started-at="2024-11-12T00:48:27 IST" name="lastExecution" finished-at="2024-11-12T00:48:27 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastExecution -->
      </class> <!-- A_Test.Basics -->
      <class name="A_Test.Basics2">
        <test-method is-config="true" signature="prerequesite()[pri:0, instance:A_Test.Basics2@57d7f8ca]" started-at="2024-11-12T00:48:26 IST" name="prerequesite" finished-at="2024-11-12T00:48:26 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequesite -->
        <test-method signature="ploan()[pri:0, instance:A_Test.Basics2@57d7f8ca]" started-at="2024-11-12T00:48:26 IST" name="ploan" finished-at="2024-11-12T00:48:26 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ploan -->
      </class> <!-- A_Test.Basics2 -->
    </test> <!-- Personal Loan -->
  </suite> <!-- Loan Department -->
</testng-results>
